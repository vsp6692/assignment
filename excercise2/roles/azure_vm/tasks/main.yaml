##Task to create Virtual Machine and its Dependencies
- name: Create resource group
  azure_rm_resourcegroup:
    name: "{{ resourcegroup.name }}"
    location: "{{ resourcegroup.location }}"

- name: Create virtual network
  azure_rm_virtualnetwork:
    resource_group: "{{ resourcegroup.name }}"
    name: "{{ vnet.name }}"
    address_prefixes: "{{ vnet.address }}"

- name: Add subnet
  azure_rm_subnet:
    resource_group: "{{ resourcegroup.name }}"
    name: "{{ subnet.name }}"
    address_prefix: "{{ subnet.address }}"
    virtual_network: "{{ vnet.name }}"

- name: Create public IP address
  azure_rm_publicipaddress:
    resource_group: "{{ resourcegroup.name }}"
    allocation_method: "Static"
    name: "{{ vm.name }}publicip"
  register: output_ip_address

- name: Get facts for one Public IP
  azure_rm_publicipaddress_facts:
    resource_group: "{{ resourcegroup.name }}"
    name: "{{ vm.name }}publicip"

- name: Dump public IP for VM which will be created
  local_action: shell echo "{{ output_ip_address.state.ip_address }}" > ./publicip.txt 

- name: Create Network Security Group that allows SSH
  azure_rm_securitygroup:
    resource_group: "{{ resourcegroup.name }}"
    name: "{{ vm.name }}nsg"
    rules:
     - name: "{{ item.name }}"
       protocol: "{{ item.protocol }}"
       destination_port_range: "{{ item.port }}"
       access: "{{ item.access }}"
       priority: "{{ item.priority }}"
       direction: "{{ item.direction }}"
  with_items:
    - "{{ vm.nsg.rules }}"

- name: Create virtual network inteface card
  azure_rm_networkinterface:
    resource_group: "{{ resourcegroup.name }}"
    name: "{{ vm.name }}nic"
    virtual_network: "{{ vnet.name }}"
    subnet: "{{ subnet.name }}"
    security_group: "{{ vm.name }}nsg"
    ip_configurations:
      - name: "{{ vm.name }}ip"
        public_ip_allocation_method: "Static"
        public_ip_address_name: "{{ vm.name }}publicip"

- name: Create VM
  azure_rm_virtualmachine:
    resource_group: "{{ resourcegroup.name }}"
    name: "{{ vm.name }}"
    vm_size: "{{ vm.size }}"
    admin_username: "{{ vm.username }}"
    ssh_password_enabled: false
    custom_data: "{{ lookup('file', './roles/azure_vm/files/cloud-init.yml') }}"
    ssh_public_keys:
      - path: /home/azureuser/.ssh/authorized_keys
        key_data: "{{ vm.publickey }}"
    network_interfaces: "{{ vm.name }}nic"
    image:
      offer: "{{ vm.image.offer }}"
      publisher: "{{ vm.image.publisher }}"
      sku: "{{ vm.image.sku }}"
      version: "{{ vm.image.version }}"

- name: Wait 300 seconds for elasticsearch to start in 9200 port
  wait_for:
    port: 9200
    host: "{{ output_ip_address.state.ip_address }}"
    delay: 60